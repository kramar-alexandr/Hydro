external procedure RateField(real,real,real,string,integer,string,boolean,real,real,string,boolean);
remote   function Boolean ReadPOSButtons(string,string,longint,var string,var string,var string,var record POSButtonsVc,var Integer);
external function Boolean HasTaxMatrix();
external function Boolean IsSessionOpen(string,string,Date,Time);
external function Boolean CUVATNrColumn;
external function Boolean UseTaxTemplatesforTaxCalc();
external function string 60 UserDefined(string,string);
external function real VATZoneButtonsLabelsLAT(real,real,real,real);
external function Boolean HasJewelleryInterface();
external function Boolean HasMetroTestFeatures();
external function Boolean HasLimitedAccess();
external function Boolean StandardHansa();
external function Boolean HasModCRM();
external function Boolean HasApprovals();
external function Boolean HasTREO();
external function Boolean HasVarieties();
external function Boolean HasTouchScreenLook();
external function Boolean HaseMail();
external function Boolean HasModPO();
external function Boolean HasCommunicator();
external function Boolean HasOfficialSerNr();
external function Boolean HasMultiCurrency();
external function Boolean HasBase2();
external function Boolean IsEnterprise();
external function Boolean HasPriceLists();
external function Boolean HasModSL();
external function Boolean HasModSO();
external function Boolean HasModIN();
external function Boolean HasModTS();
external function Boolean HasAdvancedCRM();
external function Boolean HasObjects();
external function Boolean HasSalesman();
external function Boolean HasStandardCRM();
external function Boolean HasExtTax();
external function Boolean HasModNL();
external function Boolean HasCustItem();
external function Boolean HasLanguages();
external function Boolean HasAdvancedPricing();
external function Boolean HasModSVO();
external function Boolean HasCountryPerCustomer();
external function Boolean HasVATZone();
external function Boolean HasModPOS();
external function Boolean HasModCredMan();
external function Boolean HasModPL();
external function Boolean HasMultiLocations();
external function Boolean HasRoute();
external function Boolean HasSerialNumbers();
external function Boolean HasQualityControl();
external function Boolean HasAdvancedStock();
external function Boolean HasModRent();
external function Boolean HasItemGroups();
external function Boolean HasItemClassification();
external function Boolean HasContactClassification();
external function Boolean HasSecondQuantity();
external function Boolean HasDepartments();
external function Boolean HasPreferedOfficialSerNr();
external function Boolean HasPositions();
external function Boolean HasCategories();

SetLangMode(LangLatvian,"LAT",2);

window PODClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,h3,h4,v,vm,vs;
  record CYBlock CYb;
  string 255 label;
  Integer tilenr,flipnr,f;

  vs = 20;
  BlockLoad(CYb);
  WindowBegin("Pasūtījums",PODClass,CGview,-);
  SetWRect(20,80,750,460);
  Sizeable(-1,-1,0,0);
  UseView(POVc);
  CommunicateButton;
  ActiveFieldOnNew("VECode");    
  Tile(0,74,false,"",VECode);
  EditField(75,vm=(v=6),95,"Nr.",Normal,SerNr,false,TSerSClass);
  EditField(75,v+=20,95,"Piegādātājs",Normal,VECode,false,VESClass);
  EnterSkip(PayDeal);
  EditField(h=255,v=vm,-40,"Nosaukums",Normal,Addr0,false,0);
  if (IsEnterprise) then begin
  EditField(h,vm=(v+=20),95,"Paraksts",Normal,OKPersons,false,UserSClass);
  CheckBox(h4=-100,v,0,"Apstiprināts",OKFlag);
  end else begin
    CheckBox(h4=-100,v+=vs,0,"Apstiprināts",OKFlag);  
  end;
  tilenr = 1;
  TileButton(tilenr,"Nosac."); tilenr = tilenr + 1;  
  TileButton(tilenr,"Artikuli"); tilenr = tilenr + 1;  
  if (HasMultiCurrency or HasBase2) then begin
    TileButton(tilenr,"Valūta"); tilenr = tilenr + 1;  
  end;
  if (HasModIN) then begin
    TileButton(tilenr,"Nosūt. nosac."); tilenr = tilenr + 1;  
  end;
  TileButton(tilenr,"Komentārs"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Pas. adrese"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Nosūt. adrese"); tilenr = tilenr + 1;  
  if (IsEnterprise and StandardHansa==false) then begin
    TileButton(tilenr,"Papildizm."); tilenr = tilenr + 1;  
  end;
  tilenr = 1;
  Tile(tilenr,90,false,tilenr,TransDate); tilenr = tilenr + 1;
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,vm=(v=6),82,"Datums",Normal,TransDate,false,PasteCurDate);
  EditField(h1,v+=vs,25,"Sam. termiņš",Normal,PayDeal,false,PDSClass);
  if (IsEnterprise) then begin
  EditField(h1,v+=vs,82,"Derīgs līdz",Normal,ValidUntil,false,PasteCurDate);
  end;
  if (HasModIN) then begin
  EditField(h1,v+=vs,82,"Plānotā nosūt.",Normal,PlanShip,false,PasteCurDate);
  end;
  EditField(h2,v=vm,135,"Mūsu kontaktp.",Normal,OurContact,false,0);
  EditField(h2,v+=vs,135,"Pieg. kontaktp.",Normal,VEContact,false,ContactSClass);
  if (HasObjects) then begin
  EditField(h2,v+=vs,135,"Objekti",Normal,Objects,false,ObjSClass);
  end;
  if (HasModIN) then begin
  EditField(h2,v+=vs,135,"Atsauksme",Normal,Reference,false,0);
  end;
  if (HasSalesman) then begin
  EditField(h3,v=vm,80,"Aģents",Normal,SalesMan,false,UserSClass);
  end;
  if (HasModTS) then begin
  EditField(h3,v+=vs,80,"Projekts",Normal,PRCode,false,PRSClass);
  end;
  if (IsEnterprise) then begin
  EditField(h3,v+=vs,80,"Pasūt. veids",Normal,POClass,false,POrderClassSClass);
  EditField(h3,v+=vs,80,"Pasūt. tips",ViewOnly,OrderType,false,0);
  end;
  CheckBox(h4,v=6,0,"Slēgts",Closed);
  if (CYb.UseTaxTemplatesforTaxCalc==0) then begin
  CheckBox(h4,v+=16,0,"Cena ar PVN",InclVAT);
  end else begin
    CheckBox(h4,v+=16,0,"Cena ar PVN",InclVAT);  
  end;
  EnterSkip(Math);
  Tile(tilenr,120,true,tilenr,Math); tilenr = tilenr + 1;
  if (HasMultiCurrency or HasBase2) then begin
  EditField(110,-41,70,"Valūta",Normal,CurncyCode,false,CurncyCodeSClass);
  end;
  if (IsEnterprise and StandardHansa==false) then begin
  EditField(110,-21,70,"Paletes",ViewOnly,TotPalletNr,true,0);
  EditField(260,-41,70,"Krava",Normal,ShipCost,true,0);
  EditField(260,-21,70,"Muita",Normal,CustomsCost,true,0);
  end;
  if (CYb.UseTaxTemplatesforTaxCalc==0) then begin
  EditField(410,-41,70,"PVN",ViewOnly,Sum3,true,0);
  if (HasExtTax) then begin
  EditField(410,-21,70,"Atsk. nod.",ViewOnly,TAX1Sum,false,0);
    end;
  end else begin
    EditField(410,-41,70,"Nod.",ViewOnly,Sum3,true,0);  
  end;
  EditField(-169,-41,118,"Starps.",ViewOnly,Sum1,true,0);
  EditField(-169,-21,118,"KOPĀ",ViewOnly,Sum4,true,0);
//  CheckBox(20,-21,0,"OK",OKFlag);
  v = 24;
  if (HasModIN or HasModPL or HasObjects) then begin
  MatrixBegin(3,v,-50,-44,-,199);
  end else begin
    MatrixBegin(3,v,-25,-44,-,199);
  end;
  MatTypedRow(stp);
  Flip(0);
  MatCol(1,28,"Artikuls",0,ArtCode,false,INSClass);
//  MatCol(1,144,"Qty",0,Quant,true,0);
//  MatCol(1,144,"Qty",0,Quant,true,0);
  if (HasVarieties) then begin
  MatCol(1,94,"Daudz.",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(1,94,"Daudz.",0,Quant,true,0);  
  end;
  EnterSkip(ArtCode);
//  MatCol(1,194,"Description",0,Spec,false,0);
  flipnr = 1;
  Flip(flipnr); flipnr = flipnr + 1;
  MatColTL(1,164,"Vienība",0,M4Code,ViewOnly,5,UnitCode,false,UnitSCLass);
  MatCol(1,204,"Apraksts",0,Spec,false,0);
  if (HasJewelleryInterface) then begin
    MatCol(1,-337,"Noliktavas tips",0,StockType,false,SetSClass); 
  end;
  MatCol(1,-237,"Vienības cena",0,Price,true,0);
  MatCol(1,-151,"%",0,vRebate,true,0);
  MatCol(1,-116,"Summa",0,Sum,true,0);
  if (CYb.UseTaxTemplatesforTaxCalc!=0) then begin
  MatCol(1,-30,"Nod.veidnes kods",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
  MatCol(1,-30,"PVN",0,VATCode,false,VATCodeSClass);
  end;
  if (HasObjects) then begin
    Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,164,"Apraksts",0,Spec,false,0);
    if (IsEnterprise) then begin
  MatCol(1,-310,"Pieg.konts",0,CostAcc,false,AccSClass);
    end;
  MatCol(1,-240,"Objekti",0,Objects,false,ObjSClass);
    if (IsEnterprise) then begin
  MatCol(1,-170,"Pas.art.",0,VEArtCode,false,PISClass);
  MatColTL(1,-100,"Pieg.vien.",0,M4Code,ViewOnly,5,VEUnit,false,UnitSCLass);//MatCol(1,-100,"S. Unit",0,VEUnit,false,UnitSCLass);
  MatCol(1,-50,"Pieg.daudz.",0,VEQuant,true,0);
    end;
  end;
  if (HasModIN) then begin
    Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,164,"Apraksts",0,Spec,false,0);
  MatCol(1,-330,"Saņ. 1",0,Shipd1,true,0);
  MatCol(1,-270,"Saņ. 2",0,Shipd2,true,0);
    if (HasModPL) then begin
  MatCol(1,-210,"Rēķins",0,Invd,true,0);
    end;
    if (IsEnterprise and StandardHansa==false) then begin
  MatCol(1,-150,"Paletes Nr.",0,PalletNr,true,0);
  MatCol(1,-90,"Projekts",0,PRCode,true,PRSClass);
  MatCol(1,-40,"DT Nr.",0,WSNr,true,0);
    end;
  end;
  if (IsEnterprise) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    if (StandardHansa==false) then begin
      MatCol(1,164,"Pasūt. tips",0,OrderType,false,0);  
      MatCol(1,-400,"Anod.",0,Anod,true,0); // OBS  added
      MatCol(1,-360,"Powd.",0,Powd,true,0); // OBS  added
      MatCol(1,-320,"Mec.",0,Mec,true,0);   // OBS  added
      MatCol(1,-280,"Noliktavas tips",0,StockType,false,SetSClass); //OBS
    end else begin
      MatCol(1,164,"Apraksts",0,Spec,false,0);  
    end;
    if (HasTREO) then begin
  MatCol(1,-200,"TREO",0,TREO,false,SetSClass); //OBS
    end;
  MatCol(1,-140,"Plān.nosūtīt",0,PlanShipRow,true,PasteCurDate);  //OBS
  MatCol(1,-70,"Komentārs",0,Comment,true,0); //OBS
    if (StandardHansa==false) then begin
    Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,164,"Apraksts",0,Spec,false,0);
  MatCol(1,-420,"Pieg. izm.",0,ShipCost,true,0);
  MatCol(1,-360,"Muita",0,CustomsCost,true,0);
  label = UserDefined("AccBlock","PUCost1");
  if (blank(label)) then begin label = "Izm. 1";end;
  MatCol(1,-300,label,0,RowCost1,true,0);
  label = UserDefined("AccBlock","PUCost2");
  if (blank(label)) then begin label = "Izm. 2";end;
  MatCol(1,-240,label,0,RowCost2,true,0);
  label = UserDefined("AccBlock","PUCost3");
  if (blank(label)) then begin label = "Izm. 3";end;
  MatCol(1,-180,label,0,RowCost3,true,0);
  label = UserDefined("AccBlock","PUCost4");
  if (blank(label)) then begin label = "Izm. 4";end;
  MatCol(1,-120,label,0,RowCost4,true,0);
  label = UserDefined("AccBlock","PUCost5");
  if (blank(label)) then begin label = "Izm. 5";end;
  MatCol(1,-60,label,0,RowCost5,true,0);
    end;
  end;
  DeleteRowTest;
  InsertRowTest;
  EndMatrix;
  vs = 20;
//  v = 18;
  v = v + 1;
  if (flipnr>2) then begin
    for (f=1;f<flipnr;f=f+1) begin
      VTab(-35,v,-16,v+vs,ToolFlip,f,chr(asc("A") + f - 1));  
      v = v + vs;
    end;
  end;
  if (HasMultiCurrency or HasBase2) then begin
    Tile(tilenr,70,false,tilenr,FrRate); tilenr = tilenr + 1;
    vs = 20; h = 110; h2 = 295;
    if (HasBase2) then begin
      h1 = h1 + 20;
    end;
    EditField(h1,v=6,50,"Valūta",Normal,CurncyCode,false,CurncyCodeSClass);  
    if (HasMultiCurrency) then begin
      if (HasBase2) then begin
        EditField(h1,v+vs,50,"Bāzes valūta 1",Normal,BaseRate1,true,0);
      end else begin
        EditField(h1,v+vs,50,"Bāzes valūta",Normal,BaseRate1,true,0);
      end;
      if (HasBase2) then begin  
        EditField(h1,v+(vs*2),50,"Bāzes valūta 2",Normal,BaseRate2,true,0);  
      end;
      EditField(h2=295,v,50,"Kurss",Normal,FrRate,true,0);  
      if (HasBase2) then begin  
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Bāzes valūta 1",false);  
        RateField(h3,v+=vs,50,":",Normal,"ToRateB2",true,h3+60,v+14,"Bāzes valūta 2",false);            
      end else begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Bāzes valūta",false);      
      end;
    end else begin
      EditField(h1,v+=vs,50,"Bāzes valūta 1",Normal,BaseRate1,true,0);  
      EditField(h1,v+=vs,50,"Bāzes valūta 2",Normal,BaseRate2,true,0);  
    end;
  end;
  if (HasModIN) then begin
    Tile(tilenr,90,false,tilenr,ShipDeal); tilenr = tilenr + 1;
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,v=6,80,"Nosūt. nosac.",Normal,ShipDeal,false,ShipDealSClass);
    if (IsEnterprise) then begin
  EditField(h1,v+=vs,80,"Nosūt. veids",Normal,ShipMode,false,DMSClass);
    end;
    if (HasMultiLocations) then begin
  EditField(h1,v+=vs,80,"Noliktava",Normal,Location,false,LocationSClass);
    end;
    if (IsEnterprise) then begin
      if (StandardHansa==false) then begin
        EditField(h1,v+=vs,80,"Filiāle",ViewOnly,BranchID,false,0);
//  EditField(h2,v=vm,80,"Total Quantity",ViewOnly,TotQty,true,0);
//  EditField(h2,v+=vs,80,"Total Weight",ViewOnly,TotWeight,true,0);
//  EditField(h2,v+=vs,80,"Total Volume",ViewOnly,TotVolume,true,0);
  EditField(h2,v=vm,80,"Pak. pas. Nr.",Normal,SVONr,false,0);
  EditField(h2,v+=vs,80,"Darba pas. Nr.",Normal,WONr,false,0);
  EditField(h2,v+=vs,80,"Pas. procesa Nr.",Normal,POCQStatNr,true,POCQStatSClass);
  EditField(h2,v+=vs,80,"Pas līguma Nr.",ViewOnly,POCOSerNr,true,0);
      end;
  CheckBox(473,v=vm,0,"Rēķins pirms preču saņemšanas",InvBeforePU);
      CheckBox(473,v+=vs,0,"Uzstādīt saņemtās preces daudzumu uz nulli",SetZeroPUQuant);  
      EditField(h3,v+=vs,80,"Intrastat grām. kods",Normal,IntrastatTransCode,false,IntrastatTransCodeSClass);  
    end;
  end;
  if (IsEnterprise) then begin
    Tile(tilenr,90,false,tilenr,LangCode); tilenr = tilenr + 1;
    EditField(h1,v=6,80,"Atlaižu matrica",Normal,RebCode,false,RebSClass);  
    if (StandardHansa==false) then begin
  EditField(h1,v+=vs,80,"Faktorings",Normal,VEFactoring,false,VESClass);
    end;
  EditField(h1,v+=vs,80,"Pas. Nr.",Normal,OrdNr,false,0);
  EditField(h1,v+=vs,-20,"Komentārs",Normal,Comment,false,0);
    if (StandardHansa==false) then begin
  EditField(h2,v=vm,80,"Aģentu grupa",Normal,SalesGroup,false,SalesGroupSClass);
  EditField(h2,v+=vs,80,"Maksātājs",Normal,InvoiceToCode,false,VESClass);
    end;
  EditField(h2,v+=vs,80,"Izmaksas",Normal,CostPerUnit,true,0);
    if (HasLanguages) then begin
  EditField(h3,v=vm,80,"Valoda",Normal,LangCode,false,LangSClass);
    end;
  end else begin
    Tile(tilenr,20,false,tilenr,Comment); tilenr = tilenr + 1;
    if (HasAdvancedPricing) then begin
      EditField(h1,v=6,80,"Atlaižu matrica",Normal,RebCode,false,RebSClass);  
    end else begin
    EditField(h1,v=6,-20,"Komentārs",Normal,Comment,false,0);  
    end;
  end;
  Tile(tilenr,230,false,tilenr,Addr1); tilenr = tilenr + 1;
  label = UserDefined("CUVc","InvAddr0");
  if (blank(label)) then begin label = "Pasūtīšanas"; end;
  EditField(h=110,v=6,-20,label,Normal,Addr1,false,0);
  label = UserDefined("CUVc","InvAddr1");
  if (blank(label)) then begin label = "adrese"; end;
  EditField(h,v+=vs, -20,label,Normal,Addr2,false,0);
  label = UserDefined("CUVc","InvAddr2");
  EditField(h,v+=vs, -20,label,Normal,Addr3,false,0);
  label = UserDefined("CUVc","InvAddr3");
  EditField(h,v+=vs, -20,label,Normal,InvAddr3,false,0);
  label = UserDefined("CUVc","InvAddr4");
  EditField(h,vm=(v+=vs), -20,label,Normal,InvAddr4,false,0);
  vm = vm + 40;
  if (HasApprovals) then begin
    ButtonFrame(h3=h+4,v=vm,123,6,"Apstiprinājuma statuss");
  RadioButton(h3,v,kAcceptanceStateNotRequired,0,"Nav nepieciešams",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateNotStarted,0,"Nav sākts",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateNotRequested,0,"Nav prasīts",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStatePending,0,"Procesā",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateApproved,0,"Apstiprināts",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateRejected,0,"Noraidīts",AcceptanceStatus);  
  end;
  if (HasVATZone) then begin
  v = VATZoneButtonsLabelsLAT(h3=290,v=vm,140,16);
  end;
  if (IsEnterprise) then begin
  EditField(h2=-170,v=vm,150,"Reģions",Normal,Region,false,RegionSClass); 
//  EditField(h2,v+=vs,150,"VAT Reg. No.",Normal,VATNr,false,0);
//  EditField(h2,v+=vs,150,"Telephone",Normal,Phone,false,0);
//  EditField(h2,v+=vs,150,"Fax",Normal,Fax,false,0);
  end;
  Tile(tilenr,130,false,tilenr,ShipAddr0); tilenr = tilenr + 1;
  EditField(h,v=6,-20,"Piegādes",Normal,ShipAddr0,false,0);
  EditField(h,v+=vs,-20,"adrese",Normal,ShipAddr1,false,0);
  EditField(h,v+=vs,-20,"",Normal,ShipAddr2,false,0);
  EditField(h,v+=vs,-20,"",Normal,ShipAddr3,false,0);
  EditField(h,v+=vs,-20,"",Normal,DelAddr3,false,0);
  EditField(h,v+=vs,-20,"",Normal,DelAddr4,false,0);
  if (IsEnterprise and StandardHansa==false) then begin
    Tile(tilenr,70,false,tilenr,ShipCost); tilenr = tilenr + 1;
  vs = 20; h2 = 290; h3 = 530;
  label = UserDefined("AccBlock","PUCost1");
  if (blank(label)) then begin label = "Papildizm. 1";end;
  EditField(h1,v=6,70,label,Normal,Cost1,true,0);
  label = UserDefined("AccBlock","PUCost2");
  if (blank(label)) then begin label = "Papildizm. 2";end;
  EditField(h2,v,70,label,Normal,Cost2,true,0);
  label = UserDefined("AccBlock","PUCost3");
  if (blank(label)) then begin label = "Papildizm. 3";end;
  EditField(h1,v+=vs,70,label,Normal,Cost3,true,0);
  label = UserDefined("AccBlock","PUCost4");
  if (blank(label)) then begin label = "Papildizm. 4";end;
  EditField(h2,v,70,label,Normal,Cost4,true,0);
  label = UserDefined("AccBlock","PUCost5");
  if (blank(label)) then begin label = "Papildizm. 5";end;
  EditField(h1,v+=vs,70,label,Normal,Cost5,true,0);
  EnterSkip(TransDate);
  ButtonFrame(h3,v=16,130,2,"Papildus izmaksu aprēķins");
  RadioButton(h3,v,0,0,"Cenā",ExtraCostsCalculation);
  RadioButton(h3,v+=16,1,0,"Svarā",ExtraCostsCalculation);
  end;
  if (GuiType==kGuiMetro) then begin // Temporarily disabled on Windows 8
    if (HasModIN) then begin
      SpecialMenu("Artikula statuss",'I',2,"ItemStatusPODsm");  
    end;
    SpecialMenu("Pasūtījuma statuss",'r',5,"POStatRnPODsm");  
    if (HasModIN) then begin
      SpecialMenu("Veidot preču saņemšanu",'L',0,"PUFromPODsm");  
    end;
    if (HasModPL) then begin
      SpecialMenu("Veidot rēķinu",'F',1,"VIFromPODsm");  
    end;
    if (IsEnterprise) then begin
      SpecialMenu("Veidot atgrieztās preces",'B',6,"RetPUFromPODsm");  
    end;
/*    
  if (HaseMail) then begin
    SpecialMenu("Create e-mail",'m',3,"CreateMailFromPODsm");  
  end;
*/  
  end else begin
  if (HasModIN) then begin
  SpecialMenu("Veidot preču saņemšanu",'L',0,"PUFromPODsm");
  end;
  if (IsEnterprise and StandardHansa==false) then begin
  SpecialMenu("Veidot nosūtīšanas paziņojumu",'l',0,"DropSHFromPODsm");
  end;
  if (HasModPL) then begin
  SpecialMenu("Veidot rēķinu",'F',1,"VIFromPODsm");
  end;
  if (HasApprovals) then begin
  SpecialMenu("Nosūtīt apstiprināšanai",' ',6,"POSendforAcceptancePODsm");
  SpecialMenu("Atcelt apstiprināšanas pieprasījumu",' ',2,"CancelApprovalRequestDsm");
  end;
  if (HasModIN) then begin
  SpecialMenu("Artikula statuss",'I',2,"ItemStatusPODsm");
  end;
  SpecialMenu("Artikulu meklēšana",'f',1,"ItemSearchDsm");
  if (HaseMail) then begin
  SpecialMenu("Veidot e-pastu",'m',3,"CreateMailFromPODsm");
  end;
  if (IsEnterprise) then begin
  SpecialMenu("Iepriekšējā pirkuma cena",' ',4,"POLastPPrsm");
  end;
  SpecialMenu("Pasūtījuma statuss",'r',5,"POStatRnPODsm");
  if (IsEnterprise) then begin
  SpecialMenu("Veidot atgrieztās preces",'B',6,"RetPUFromPODsm");
  SpecialMenu("Rezervācijas",' ',6,"POReservPODsm");
  end;
  if (HasTaxMatrix) then begin
  SpecialMenu("Atvērt nod. matricu",' ',25,"OpenVatMatrixPODsm"); 
  end;
  end;
  EndWindow;
end;

#ifdef HAL

/* Bankfile for Estonia (UhisPank) */

global
procedure BankExpEstonia3(record OPVc OPr,var integer expcntp,integer koond)
begin
  record BankVc Bankr;
  record CYBlock CompYear;
  record CUVc VEr;
  record VIVc VIr;
  record PMBlock PMr;
  record OPTblock OPTr;
  row OPVC OPrw;
  row OPVC upOPrw;
  row OPVC downOPrw;
  row PMBlock PMrw;
  Integer i,j;
  Integer rwcnt,PMrrwcnt;
  string 255 tstr,t2;
  boolean found;
  boolean all;
  val koondval;
  array string 20 vendor;
  array integer rownr;
  array val payval;
  array string 82 comment;
  integer k,t,x;
  boolean ftest;
  string 255 suplinv;
  //
  String 16 cCode;

  BlockLoad(CompYear);
  BlockLoad(OPTr);
  rwcnt = MatRowCnt(OPr);
  if (koond == 1) and (rwcnt > 1) then begin
    //one payment per supplier
    k = 0;
    for (i = 0; i<rwcnt; i = i + 1) begin
      MatRowGet(OPr,i,OPrw);
      VIr.SerNr = OPrw.VISerNr;
      if ReadFirstMain(VIr,1,true) then begin
        suplinv = VIr.InvoiceNr;
      end else begin
        suplinv = OPrw.VISerNr;
      end;
      if (k == 0) then begin
        vendor[k] =OPrw.VECode;
        rownr[k] = i;
        // 15.11.2010, Panga summa
        //payval[k] = OPrw.RecVal;
        payval[k] = OPrw.BankVal;

        comment[k] = "Arve Nr " &  suplinv;
        k = 1;

        // remember currency
        cCode = OPrw.BankCurncy;

      end else begin
        ftest = false;
        for (t = 0; t<k; t = t + 1) begin
          if (vendor[t] == OPrw.VECode) then begin
            //payval[t] = payval[t] + OPrw.RecVal;
            payval[t] = payval[t] + OPrw.BankVal;

            comment[t] = comment[t] & "," &  suplinv;
            ftest = true;
          end;
        end;
        if (ftest == false) then begin
          vendor[k] = OPrw.VECode;
          rownr[k] = i;
          //payval[k] = OPrw.RecVal;
          payval[k] = OPrw.BankVal;
          comment[k] = "Arve Nr " &  suplinv;
          k = k + 1;
        end;
      end;
    end;
    for (t = 0; t<k; t = t + 1) begin
      MatRowGet(OPr,rownr[t],OPrw);
      //koond
      ExportPadString(":0:KIRJETUNNUS:**M3",len(":0:KIRJETUNNUS:**M3")," ",false);
      NewLine;
      ExportPadString(":1:MAKSEDOKUMENDI NR:" & OPr.SerNr,len(":1:MAKSEDOKUMENDI NR:" & OPr.SerNr)," ",false);
      NewLine;
      ExportPadString(":2:MAKSE SUMMA:" & ValToString(payval[t],M4Val,"","",0),len(":2:MAKSE SUMMA:" & ValToString(payval[t],M4Val,"","",0))," ",false);
      NewLine;
      // 15.11.2010, not hard-coded anymore
      //ExportPadString(":3:MAKSE VALUUTA:EEK",len(":3:MAKSE VALUUTA:EEK")," ",false);
      ExportPadString(":3:MAKSE VALUUTA:" & cCode, len(":3:MAKSE VALUUTA:" & cCode), " ", false);

      NewLine;
      ExportPadString(":4:MAKSE SELGITUS:" & comment[t],len(":4:MAKSE SELGITUS:" & comment[t])," ",false);
      NewLine;
      //nk ExportPadString(":5:VIITE NR:" & VIr.RefStr,len(":5:VIITE NR:" & VIr.RefStr)," ",false);
      ExportPadString(":5:VIITE NR:" & "",len(":5:VIITE NR:" & "")," ",false);

      NewLine;
      ExportPadString(":6:MAKSJA KONTO NR:" & OPr.BankAcc,len(":6:MAKSJA KONTO NR:" & OPr.BankAcc)," ",false);
      NewLine;
      ExportPadString(":7:SAAJA KONTO NR:" & OPrw.BankAcc,len(":7:SAAJA KONTO NR:" & OPrw.BankAcc)," ",false);
      NewLine;
      VEr.Code = vendor[t];
      if ReadFirstMain(VEr,1,true) then begin end;
      ExportPadString(":8:SAAJA NIMI:" & VEr.Name,len(":8:SAAJA NIMI:" & VEr.Name)," ",false);
      NewLine;
      Bankr.Code = VEr.AccOperator;
      if (ReadFirstMain(Bankr,1,true)) then begin
        ExportPadString(":11:SAAJA PANGA NIMI:" & Bankr.Name,len(":11:SAAJA PANGA NIMI:" & Bankr.Name)," ",false);
        NewLine;
      end;
      ExportPadString(":12:KUUPAEV:" & DateToString(OPr.TransDate,"YYMMDD"),len(":12:KUUPAEV:" & DateToString(OPr.TransDate,"YYYY-MM-DD"))," ",false);
      NewLine;
    end;
  end;

  //normal
  if (koond == 0) or (rwcnt <= 1) then begin
    for (i = 0; i<rwcnt; i=i+1) begin
      MatRowGet(OPr,i,OPrw);
      VEr.Code = OPrw.VECode;
      found = ReadFirstMain(VEr,1,true);
      VIr.SerNr = OPrw.VISerNr;
      found = ReadFirstMain(VIr,1,true);
      ExportPadString(":0:KIRJETUNNUS:**M3",len(":0:KIRJETUNNUS:**M3")," ",false);
      NewLine;
      ExportPadString(":1:MAKSEDOKUMENDI NR:" & OPr.SerNr,len(":1:MAKSEDOKUMENDI NR:" & OPr.SerNr)," ",false);
      NewLine;
      // 15.11.2010, Panga summa
      //ExportPadString(":2:MAKSE SUMMA:" & ValToString(OPrw.RecVal,M4Val,"","",0),len(":2:MAKSE SUMMA:" & ValToString(OPrw.RecVal,M4Val,"","",0))," ",false);
      ExportPadString(":2:MAKSE SUMMA:" & ValToString(OPrw.BankVal,M4Val,"","",0), len(":2:MAKSE SUMMA:" & ValToString(OPrw.BankVal,M4Val,"","",0)), " ", false);

      NewLine;
      // 15.11.2010, not hard-coded anymore
      //ExportPadString(":3:MAKSE VALUUTA:EEK",len(":3:MAKSE VALUUTA:EEK")," ",false);
      ExportPadString(":3:MAKSE VALUUTA:" & OPrw.BankCurncy, len(":3:MAKSE VALUUTA:" & OPrw.BankCurncy), " ", false);

      NewLine;
      ExportPadString(":4:MAKSE SELGITUS:" & OPrw.Comment,len(":4:MAKSE SELGITUS:" & OPrw.Comment)," ",false);
      NewLine;
      ExportPadString(":5:VIITE NR:" & VIr.RefStr,len(":5:VIITE NR:" & VIr.RefStr)," ",false);
      NewLine;
      ExportPadString(":6:MAKSJA KONTO NR:" & OPr.BankAcc,len(":6:MAKSJA KONTO NR:" & OPr.BankAcc)," ",false);
      NewLine;
      ExportPadString(":7:SAAJA KONTO NR:" & OPrw.BankAcc,len(":7:SAAJA KONTO NR:" & OPrw.BankAcc)," ",false);
      NewLine;
      ExportPadString(":8:SAAJA NIMI:" & VEr.Name,len(":8:SAAJA NIMI:" & VEr.Name)," ",false);
      NewLine;
      Bankr.Code = VEr.AccOperator;
      if (ReadFirstMain(Bankr,1,true)) then begin
        ExportPadString(":11:SAAJA PANGA NIMI:" & Bankr.Name,len(":11:SAAJA PANGA NIMI:" & Bankr.Name)," ",false);
        NewLine;
      end;
      ExportPadString(":12:KUUPAEV:" & DateToString(OPr.TransDate,"YYMMDD"),len(":12:KUUPAEV:" & DateToString(OPr.TransDate,"YYYY-MM-DD"))," ",false);
      NewLine;
    end;
  end;

  return;
end;

#endif

